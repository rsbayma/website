"0","import sympy as sp"
"0",""
"0","s = sp.symbols('s')"
"0","w0 = sp.symbols('\omega_0')"
"2","<input>:1: SyntaxWarning: invalid escape sequence '\o'
"
"2","<string>:1: SyntaxWarning: invalid escape sequence '\o'
"
"0","l1,l2 = sp.symbols(['l_1','l_2'])"
"0",""
"0",""
"0","A = sp.Matrix([[0,1],[-w0**2,0]])"
"0","C = sp.Matrix([1,0]).T"
"0","L = sp.Matrix([[l1],[l2]])"
"0","A_str = sp.latex(A)"
"0","C_str = sp.latex(C)"
"0","L_str = sp.latex(L)"
"0",""
"0",""
"0","#Poliômio do observador"
"0","eq1 = '&= s' + sp.latex(sp.eye(2))  # sI"
"0","eq1 += '-' + sp.latex(A) + '+' + sp.latex(L) + sp.latex(C) +'='"
"0","eq2 = '&= ' + sp.latex(s*sp.eye(2)) + '-'  + sp.latex(A) + '+' + sp.latex(L@C) + ' = '"
"0","eq3 = '&= ' + sp.latex(s*sp.eye(2)-A+L@C)"
"0",""
"0",""
"0","# Polinômio do observador (A-LC)"
"0","p_obsv = sp.det(s*sp.eye(2)-A+L@C)"
"0","p_obsv_str = sp.latex(p_obsv)"
"0",""
"0","# Polinômio desejado"
"0","p_desejado = sp.expand((s+10*w0)**2)"
"0","p_desejado_str = sp.latex(p_desejado)"
"0",""
"0","# Igualando termo a termo"
"0","eq = [sp.Eq(p_obsv.coeff(s,n),p_desejado.coeff(s,n)) for n in (0,1)]"
"0","eq4 = sp.latex(eq[0])"
"0","eq5 = sp.latex(eq[1])"
"0",""
"0","sol = sp.solve(eq,L)"
"0",""
"0","sol_str = r'\mathbf{L} = ' + sp.latex(L.subs(sol))"
"0",""
"0",""
